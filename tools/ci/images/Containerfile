# This is a docker image containing docker and a Nix store.
# This enables to either run Docker images inside this one,
# or use `nix develop` to start a sandboxed environment to
# do other non-docker related stuff.

FROM alpine:latest as base-podman
LABEL org.opencontainers.image.source https://github.com/sdsc-ordes/dotfiles
LABEL org.opencontainers.image.description "CI container image for dotfiles"
LABEL org.opencontainers.image.license "GNU GPL 3"

RUN apk add sudo findutils coreutils git jq curl bash just

# Nix Image
# ===============================================
FROM base-podman as ci-nix
ARG USER_NAME=ci
ARG USER_HOME="/home/${USER_NAME}"
ARG USER_UID=1000
ARG USER_GID=1000

COPY ./tools/ci /container-setup/tools/ci

# Create user.
RUN mkdir -p "$USER_HOME" && \
    adduser "$USER_NAME" -s /bin/zsh -D -u "$USER_UID" -g "$USER_GID" -h "$USER_HOME" && \
    mkdir -p /etc/sudoers.d && \
    echo "$USER_NAME ALL=(root) NOPASSWD:ALL" > "/etc/sudoers.d/$USER_NAME" && \
    chmod 0440 "/etc/sudoers.d/$USER_NAME" && \
    chown -R "$USER_NAME:$USER_NAME" /home /container-setup
USER "$USER_NAME"

# Install Nix.
RUN bash -c ". /container-setup/tools/ci/general.sh && ci_setup_nix"
ENV PATH="${PATH}:/nix/var/nix/profiles/default/bin"

# Cache Nix.
COPY ./tools/nix /container-setup/tools/nix
RUN sudo nix develop --accept-flake-config /container-setup/tools/nix --command "true"

RUN git config --global user.name "CI Dotfiles"
RUN git config --global user.email "dotfiles@sdsc-ordes.ch"
